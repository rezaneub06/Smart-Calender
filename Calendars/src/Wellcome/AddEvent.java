/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Wellcome;

import java.awt.Color;
import java.awt.Container;
import java.io.PrintWriter;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kibria
 */
public class AddEvent extends javax.swing.JFrame {

    /**
     * Creates new form AddEvent
     */
    private Container c;
    DefaultTableModel model;
    int x = 0, dd = 00, mm = 00, yy = 00;
    String allDate = "", dateday, day = "", month = "", year = "", EventName1, AllDate1;

    public AddEvent() {
        initComponents();
        c = this.getContentPane();
        this.setVisible(true);
        this.setLocation(10, 15);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.setTitle("Smart_Calender");
        c.setBackground(Color.PINK);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DataEntryDMY = new javax.swing.JLabel();
        AllDataTextButton = new javax.swing.JButton();
        AddEventLavel = new javax.swing.JLabel();
        AddEventFieldEventName = new javax.swing.JTextField();
        AddEventClear2 = new javax.swing.JButton();
        INFOLavel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jButton2 = new javax.swing.JButton();
        OkMonthBUtton = new javax.swing.JButton();
        OkYearButton = new javax.swing.JButton();
        DateText = new javax.swing.JTextField();
        MonthText = new javax.swing.JTextField();
        YearText = new javax.swing.JTextField();
        AllDateText = new javax.swing.JTextField();
        DayLabel = new javax.swing.JLabel();
        ManthLabel = new javax.swing.JLabel();
        YearLabel = new javax.swing.JLabel();
        MonthScroll = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        AddTextArea = new javax.swing.JTextArea();
        AddClearButton = new javax.swing.JButton();
        AddEnterButton = new javax.swing.JButton();
        AddBackButton = new javax.swing.JButton();
        AddInformationLabel = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        OKDataButton = new javax.swing.JButton();
        YearScroll = new javax.swing.JSpinner();
        DateScroll = new javax.swing.JSpinner();
        jSeparator2 = new javax.swing.JSeparator();
        ChooseEventFieldname = new javax.swing.JTextField();
        ChooseEventFieldDate = new javax.swing.JTextField();
        ChooseEventEnterButton = new javax.swing.JButton();
        ChooseExit = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        AddEventTabel = new javax.swing.JTable();
        ChooseEventLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        DataEntryDMY.setBackground(new java.awt.Color(153, 153, 255));
        DataEntryDMY.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        DataEntryDMY.setText("     dd/mm/yy");
        DataEntryDMY.setToolTipText("");
        DataEntryDMY.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 0), 4, true));

        AllDataTextButton.setBackground(new java.awt.Color(51, 0, 51));
        AllDataTextButton.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        AllDataTextButton.setForeground(new java.awt.Color(204, 255, 0));
        AllDataTextButton.setText("OK");
        AllDataTextButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        AllDataTextButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AllDataTextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AllDataTextButtonActionPerformed(evt);
            }
        });

        AddEventLavel.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        AddEventLavel.setForeground(new java.awt.Color(51, 0, 51));
        AddEventLavel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AddEventLavel.setText("Please add your Date,Event Name  & Information");
        AddEventLavel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 0, 0), 12, true));

        AddEventFieldEventName.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        AddEventFieldEventName.setForeground(new java.awt.Color(51, 0, 51));
        AddEventFieldEventName.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 0, 51), 2, true));

        AddEventClear2.setBackground(new java.awt.Color(51, 0, 51));
        AddEventClear2.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        AddEventClear2.setForeground(new java.awt.Color(0, 102, 102));
        AddEventClear2.setText("Clear");
        AddEventClear2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        AddEventClear2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AddEventClear2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddEventClear2ActionPerformed(evt);
            }
        });

        INFOLavel.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        INFOLavel.setForeground(new java.awt.Color(51, 0, 51));
        INFOLavel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        INFOLavel.setText("Add your Information");
        INFOLavel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 0, 51), 2, true));

        jSeparator1.setBackground(new java.awt.Color(51, 0, 51));
        jSeparator1.setForeground(new java.awt.Color(51, 0, 51));
        jSeparator1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 0, 51), 2, true));

        jButton2.setBackground(new java.awt.Color(51, 0, 51));
        jButton2.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(204, 204, 0));
        jButton2.setText("Clear");
        jButton2.setToolTipText("Clear");
        jButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        OkMonthBUtton.setBackground(new java.awt.Color(51, 0, 51));
        OkMonthBUtton.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        OkMonthBUtton.setForeground(new java.awt.Color(255, 255, 0));
        OkMonthBUtton.setText("OK");
        OkMonthBUtton.setToolTipText("OK");
        OkMonthBUtton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 0, 51), 2, true));
        OkMonthBUtton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        OkMonthBUtton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OkMonthBUttonActionPerformed(evt);
            }
        });

        OkYearButton.setBackground(new java.awt.Color(51, 0, 51));
        OkYearButton.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        OkYearButton.setForeground(new java.awt.Color(255, 255, 0));
        OkYearButton.setText("OK");
        OkYearButton.setToolTipText("OK");
        OkYearButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 0, 51), 2, true));
        OkYearButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        OkYearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OkYearButtonActionPerformed(evt);
            }
        });

        DateText.setEditable(false);
        DateText.setBackground(new java.awt.Color(153, 255, 153));
        DateText.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        DateText.setForeground(new java.awt.Color(51, 0, 51));
        DateText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DateText.setToolTipText("Date");
        DateText.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 0, 51), 3, true));
        DateText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateTextActionPerformed(evt);
            }
        });

        MonthText.setEditable(false);
        MonthText.setBackground(new java.awt.Color(153, 255, 153));
        MonthText.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        MonthText.setForeground(new java.awt.Color(51, 0, 51));
        MonthText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        MonthText.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 0, 51), 3, true));

        YearText.setEditable(false);
        YearText.setBackground(new java.awt.Color(153, 255, 153));
        YearText.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        YearText.setForeground(new java.awt.Color(51, 0, 51));
        YearText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        YearText.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 0, 51), 3, true));

        AllDateText.setEditable(false);
        AllDateText.setBackground(new java.awt.Color(153, 153, 255));
        AllDateText.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        AllDateText.setForeground(new java.awt.Color(51, 0, 51));
        AllDateText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        AllDateText.setToolTipText("Date");
        AllDateText.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 51), 5, true));
        AllDateText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AllDateTextActionPerformed(evt);
            }
        });

        DayLabel.setBackground(new java.awt.Color(153, 153, 255));
        DayLabel.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        DayLabel.setForeground(new java.awt.Color(51, 0, 51));
        DayLabel.setText("    Date :");

        ManthLabel.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        ManthLabel.setForeground(new java.awt.Color(51, 0, 51));
        ManthLabel.setText("Month :");

        YearLabel.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        YearLabel.setForeground(new java.awt.Color(51, 0, 51));
        YearLabel.setText("  Year :");

        MonthScroll.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        MonthScroll.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));
        MonthScroll.setToolTipText("Select Your Month");
        MonthScroll.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 0, 51), 5, true));
        MonthScroll.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MonthScroll.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                MonthScrollAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                MonthScrollAncestorRemoved(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        AddTextArea.setBackground(new java.awt.Color(204, 204, 204));
        AddTextArea.setColumns(20);
        AddTextArea.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        AddTextArea.setForeground(new java.awt.Color(51, 0, 51));
        AddTextArea.setRows(5);
        AddTextArea.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 2, true));
        jScrollPane1.setViewportView(AddTextArea);

        AddClearButton.setBackground(new java.awt.Color(51, 0, 51));
        AddClearButton.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        AddClearButton.setForeground(new java.awt.Color(0, 102, 102));
        AddClearButton.setText("Clear");
        AddClearButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        AddClearButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AddClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddClearButtonActionPerformed(evt);
            }
        });

        AddEnterButton.setBackground(new java.awt.Color(51, 0, 51));
        AddEnterButton.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        AddEnterButton.setForeground(new java.awt.Color(0, 102, 102));
        AddEnterButton.setText("Add");
        AddEnterButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        AddEnterButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AddEnterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddEnterButtonActionPerformed(evt);
            }
        });

        AddBackButton.setBackground(new java.awt.Color(51, 0, 51));
        AddBackButton.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        AddBackButton.setForeground(new java.awt.Color(0, 102, 102));
        AddBackButton.setText("Home");
        AddBackButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        AddBackButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AddBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBackButtonActionPerformed(evt);
            }
        });

        AddInformationLabel.setBackground(new java.awt.Color(153, 153, 153));
        AddInformationLabel.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        AddInformationLabel.setForeground(new java.awt.Color(51, 51, 0));
        AddInformationLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AddInformationLabel.setText("Event Name :");
        AddInformationLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 2, true));

        jSeparator4.setBackground(new java.awt.Color(102, 0, 102));
        jSeparator4.setForeground(new java.awt.Color(51, 0, 51));
        jSeparator4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 0, 51), 1, true));

        OKDataButton.setBackground(new java.awt.Color(51, 0, 51));
        OKDataButton.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        OKDataButton.setForeground(new java.awt.Color(255, 255, 0));
        OKDataButton.setText("OK");
        OKDataButton.setToolTipText("OK");
        OKDataButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 0, 51), 2, true));
        OKDataButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        OKDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKDataButtonActionPerformed(evt);
            }
        });

        YearScroll.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        YearScroll.setModel(new javax.swing.SpinnerNumberModel(Long.valueOf(1000L), Long.valueOf(1000L), Long.valueOf(5000L), Long.valueOf(1L)));
        YearScroll.setToolTipText("Select Your Year");
        YearScroll.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 0, 51), 5, true));
        YearScroll.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        YearScroll.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                YearScrollAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                YearScrollAncestorRemoved(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        DateScroll.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        DateScroll.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));
        DateScroll.setToolTipText("Select Your Date");
        DateScroll.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 0, 51), 5, true));
        DateScroll.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DateScroll.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                DateScrollAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                DateScrollAncestorRemoved(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jSeparator2.setForeground(new java.awt.Color(51, 0, 51));
        jSeparator2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        ChooseEventFieldname.setEditable(false);
        ChooseEventFieldname.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        ChooseEventFieldname.setForeground(new java.awt.Color(51, 0, 51));
        ChooseEventFieldname.setToolTipText("Event Name");
        ChooseEventFieldname.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 0), 2, true));

        ChooseEventFieldDate.setEditable(false);
        ChooseEventFieldDate.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        ChooseEventFieldDate.setForeground(new java.awt.Color(51, 0, 51));
        ChooseEventFieldDate.setToolTipText("Date");
        ChooseEventFieldDate.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 0), 2, true));

        ChooseEventEnterButton.setBackground(new java.awt.Color(51, 0, 51));
        ChooseEventEnterButton.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        ChooseEventEnterButton.setForeground(new java.awt.Color(0, 204, 204));
        ChooseEventEnterButton.setText("Enter");
        ChooseEventEnterButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ChooseEventEnterButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ChooseEventEnterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChooseEventEnterButtonActionPerformed(evt);
            }
        });

        ChooseExit.setBackground(new java.awt.Color(51, 0, 51));
        ChooseExit.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        ChooseExit.setForeground(new java.awt.Color(0, 204, 204));
        ChooseExit.setText("Exit");
        ChooseExit.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ChooseExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ChooseExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChooseExitActionPerformed(evt);
            }
        });

        AddEventTabel.setBackground(new java.awt.Color(204, 204, 204));
        AddEventTabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 51), 2, true));
        AddEventTabel.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        AddEventTabel.setForeground(new java.awt.Color(51, 0, 51));
        AddEventTabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "                 NO", "               Event  ", "                    Date  "
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        AddEventTabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AddEventTabel.setRowHeight(25);
        AddEventTabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddEventTabelMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(AddEventTabel);

        ChooseEventLabel.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        ChooseEventLabel.setForeground(new java.awt.Color(51, 0, 51));
        ChooseEventLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ChooseEventLabel.setText(" Event List");
        ChooseEventLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 0), 2, true));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane1)
                                .addComponent(jSeparator1)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(DayLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(ManthLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(YearLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(26, 26, 26)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(MonthScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(DateScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(13, 13, 13)
                                                        .addComponent(OKDataButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(OkMonthBUtton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(YearScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(OkYearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(MonthText, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(DateText, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(YearText, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(10, 10, 10)
                                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(AllDataTextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(AllDateText, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(29, 29, 29)
                                                .addComponent(DataEntryDMY, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(129, 129, 129)
                                        .addComponent(AddBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(41, 41, 41)
                                        .addComponent(AddClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(40, 40, 40)
                                        .addComponent(AddEnterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(AddEventLavel, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(20, 20, 20))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(AddInformationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(AddEventFieldEventName, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(AddEventClear2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addComponent(INFOLavel, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ChooseEventFieldname)
                                .addGap(36, 36, 36)
                                .addComponent(ChooseEventFieldDate, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ChooseEventEnterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 16, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(235, 235, 235)
                        .addComponent(ChooseEventLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ChooseExit, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(234, 234, 234))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 35, Short.MAX_VALUE)
                        .addComponent(AddEventLavel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(DataEntryDMY, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(AllDateText, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AllDataTextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(DayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DateScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(OKDataButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DateText, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ManthLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(MonthScroll)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(OkMonthBUtton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(MonthText, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(OkYearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(YearScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(YearLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(YearText, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AddEventFieldEventName, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AddEventClear2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AddInformationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(INFOLavel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AddClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AddBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AddEnterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ChooseEventFieldname, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ChooseEventFieldDate, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ChooseEventEnterButton))
                        .addGap(18, 18, 18)
                        .addComponent(ChooseEventLabel)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ChooseExit)))
                .addGap(110, 110, 110))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AllDataTextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AllDataTextButtonActionPerformed
        allDate = day + month + year;
        int size = allDate.length();
        if (size < 8) {
            JOptionPane.showMessageDialog(null, "Plz Entry full Date", "Warning", 2);
            day = "";
            month = "";
            year = "";
            AllDateText.setText("");
            DateText.setText("");
            MonthText.setText("");
            YearText.setText("");
        } else {

            AllDateText.setText(allDate);
            DateText.setText("");
            MonthText.setText("");
            YearText.setText("");
            day = "";
            month = "";
            year = "";
        }
    }//GEN-LAST:event_AllDataTextButtonActionPerformed

    private void AddEventClear2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddEventClear2ActionPerformed
        AddEventFieldEventName.setText("");
    }//GEN-LAST:event_AddEventClear2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        AllDateText.setText("");
        allDate = "";
    }//GEN-LAST:event_jButton2ActionPerformed

    private void OkMonthBUttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OkMonthBUttonActionPerformed
        String s2 = MonthScroll.getValue().toString();
        int v2 = Integer.parseInt(s2);
        mm = v2;
        MonthText.setText("" + v2);
        month = "" + v2 + "/";
        MonthScroll.setValue(1);
    }//GEN-LAST:event_OkMonthBUttonActionPerformed

    private void OkYearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OkYearButtonActionPerformed
        String s3 = YearScroll.getValue().toString();
        int v3 = Integer.parseInt(s3);
        yy = v3;
        YearText.setText("" + v3);
        year = "" + v3 + "";
        YearScroll.setValue(1000);
    }//GEN-LAST:event_OkYearButtonActionPerformed

    private void DateTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DateTextActionPerformed

    private void AllDateTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AllDateTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AllDateTextActionPerformed

    private void MonthScrollAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_MonthScrollAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_MonthScrollAncestorAdded

    private void MonthScrollAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_MonthScrollAncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_MonthScrollAncestorRemoved

    private void AddClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddClearButtonActionPerformed
        AddTextArea.setText("");
    }//GEN-LAST:event_AddClearButtonActionPerformed

    private void AddEnterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddEnterButtonActionPerformed
        EventName1 = AddEventFieldEventName.getText();
        AllDate1 = AllDateText.getText();
        String aaa=EventName1+""+1;
        String aaa1=AllDate1+""+1;
        String aaa2=AddTextArea.getText()+""+1;
        int sss=aaa.length();
        int sss1=aaa1.length();
        int sss2=aaa2.length();        
        if (sss<=1 || sss1<=1 || sss2<=1) {
            JOptionPane.showMessageDialog(null, "Plz Entry full Information", "Warning", 2);
            AddEventFieldEventName.setText("");
            AllDateText.setText("");
            AddTextArea.setText("");
        } else {
            x++;
            if (x == 1) {
                String path = "E:/java/class practiac/Calendars/Info/AddEvent/Event1.txt";

                try {
                    PrintWriter p2 = new PrintWriter(path);
                    String line = AddTextArea.getText();
                    p2.println(line);
                    p2.flush();
                    p2.close();
                } catch (Exception ex) {
                    System.out.println("error = " + ex.getMessage());
                }
            } else if (x == 2) {
                String path = "E:/java/class practiac/Calendars/Info/AddEvent/Event2.txt";

                try {
                    PrintWriter p2 = new PrintWriter(path);
                    String line = AddTextArea.getText();
                    p2.println(line);
                    p2.flush();
                    p2.close();
                } catch (Exception ex) {
                    System.out.println("error = " + ex.getMessage());
                }
            } else if (x == 3) {
                String path = "E:/java/class practiac/Calendars/Info/AddEvent/Event3.txt";

                try {
                    PrintWriter p2 = new PrintWriter(path);
                    String line = AddTextArea.getText();
                    p2.println(line);
                    p2.flush();
                    p2.close();
                } catch (Exception ex) {
                    System.out.println("error = " + ex.getMessage());
                }
            } else if (x == 4) {
                String path = "E:/java/class practiac/Calendars/Info/AddEvent/Event4.txt";

                try {
                    PrintWriter p2 = new PrintWriter(path);
                    String line = AddTextArea.getText();
                    p2.println(line);
                    p2.flush();
                    p2.close();
                } catch (Exception ex) {
                    System.out.println("error = " + ex.getMessage());
                }
            } else if (x == 5) {
                String path = "E:/java/class practiac/Calendars/Info/AddEvent/Event5.txt";

                try {
                    PrintWriter p2 = new PrintWriter(path);
                    String line = AddTextArea.getText();
                    p2.println(line);
                    p2.flush();
                    p2.close();
                } catch (Exception ex) {
                    System.out.println("error = " + ex.getMessage());
                }
            } else if (x == 6) {
                String path = "E:/java/class practiac/Calendars/Info/AddEvent/Event6.txt";

                try {
                    PrintWriter p2 = new PrintWriter(path);
                    String line = AddTextArea.getText();
                    p2.println(line);
                    p2.flush();
                    p2.close();
                } catch (Exception ex) {
                    System.out.println("error = " + ex.getMessage());
                }
            } else if (x == 7) {
                String path = "E:/java/class practiac/Calendars/Info/AddEvent/Event7.txt";

                try {
                    PrintWriter p2 = new PrintWriter(path);
                    String line = AddTextArea.getText();
                    p2.println(line);
                    p2.flush();
                    p2.close();
                } catch (Exception ex) {
                    System.out.println("error = " + ex.getMessage());
                }
            } else if (x == 8) {
                String path = "E:/java/class practiac/Calendars/Info/AddEvent/Event8.txt";

                try {
                    PrintWriter p2 = new PrintWriter(path);
                    String line = AddTextArea.getText();
                    p2.println(line);
                    p2.flush();
                    p2.close();
                } catch (Exception ex) {
                    System.out.println("error = " + ex.getMessage());
                }
            } else if (x == 9) {
                String path = "E:/java/class practiac/Calendars/Info/AddEvent/Event9.txt";

                try {
                    PrintWriter p2 = new PrintWriter(path);
                    String line = AddTextArea.getText();
                    p2.println(line);
                    p2.flush();
                    p2.close();
                } catch (Exception ex) {
                    System.out.println("error = " + ex.getMessage());
                }
            } else if (x == 10) {
                String path = "E:/java/class practiac/Calendars/Info/AddEvent/Event10.txt";

                try {
                    PrintWriter p2 = new PrintWriter(path);
                    String line = AddTextArea.getText();
                    p2.println(line);
                    p2.flush();
                    p2.close();
                } catch (Exception ex) {
                    System.out.println("error = " + ex.getMessage());
                }
            }
            AddEventFieldEventName.setText("");
            AllDateText.setText("");
            AddTextArea.setText("");
            model = (DefaultTableModel) AddEventTabel.getModel();
            model.addRow(new Object[]{x, EventName1, AllDate1});
        }


    }//GEN-LAST:event_AddEnterButtonActionPerformed

    private void AddBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBackButtonActionPerformed
        this.dispose();
        ChooseEvent f = new ChooseEvent();
    }//GEN-LAST:event_AddBackButtonActionPerformed

    private void OKDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKDataButtonActionPerformed
        String s1 = DateScroll.getValue().toString();
        int v1 = Integer.parseInt(s1);
        dd = v1;
        DateText.setText("" + v1);
        day = "" + v1 + "/";
        DateScroll.setValue(1);
    }//GEN-LAST:event_OKDataButtonActionPerformed

    private void YearScrollAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_YearScrollAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_YearScrollAncestorAdded

    private void YearScrollAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_YearScrollAncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_YearScrollAncestorRemoved

    private void DateScrollAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_DateScrollAncestorAdded

    }//GEN-LAST:event_DateScrollAncestorAdded

    private void DateScrollAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_DateScrollAncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_DateScrollAncestorRemoved

    private void AddEventTabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddEventTabelMouseClicked
        DefaultTableModel model = (DefaultTableModel) AddEventTabel.getModel();
        int index = AddEventTabel.getSelectedRow();

        ChooseEventFieldname.setText(model.getValueAt(index, 1).toString());
        ChooseEventFieldDate.setText(model.getValueAt(index, 2).toString());
        String st = ChooseEventFieldDate.getText();
        String[] ss = st.split("/");
        allDate = "" + ss[0] + "/" + ss[1] + "/" + ss[2];
        dd = Integer.parseInt(ss[0]);
        mm = Integer.parseInt(ss[1]);
        yy = Integer.parseInt(ss[2]);
    }//GEN-LAST:event_AddEventTabelMouseClicked

    private void ChooseEventEnterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChooseEventEnterButtonActionPerformed
        calculationDay();
        OutputData2 f = new OutputData2(x, allDate, dateday);
        this.dispose();
    }//GEN-LAST:event_ChooseEventEnterButtonActionPerformed

    private void ChooseExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChooseExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ChooseExitActionPerformed

    public void calculationDay() {
        int n, year = yy, month = mm, date = dd, year_valu = 0, month_valu = 0, remnant = 0, div, all_sum, day;

        if ((100 <= year && year < 200) || (800 <= year && year < 900) || (1500 <= year && year < 1600) || (2100 <= year && year < 2200) || (2400 <= year && year < 2900) || (3500 <= year && year < 3600) || (4200 <= year && year < 4300) || (4900 <= year && year < 5000)) {
            if (100 <= year && year < 200) {
                year_valu = 5;
                remnant = year - 100;
            } else if (800 <= year && year < 900) {
                year_valu = 5;
                remnant = year - 800;
            } else if (1500 <= year && year < 1600) {
                year_valu = 5;
                remnant = year - 1500;
            } else if (2100 <= year && year < 2200) {
                year_valu = 5;
                remnant = year - 2100;
            } else if (2400 <= year && year < 2900) {
                year_valu = 5;
                remnant = year - 2400;
            } else if (3500 <= year && year < 3600) {
                year_valu = 5;
                remnant = year - 3500;
            } else if (4200 <= year && year < 4300) {
                remnant = year - 4200;
            } else if (4900 <= year && year < 5000) {
                year_valu = 5;
                remnant = year - 4900;
            }
        } else if ((200 <= year && year < 300) || (900 <= year && year < 1000) || (1600 <= year && year < 1700) || (2200 <= year && year < 2300) || (2900 <= year && year < 3000) || (3600 <= year && year < 3700) || (4300 <= year && year < 4400) || (year == 5000)) {
            if (200 <= year && year < 300) {
                year_valu = 4;
                remnant = year - 200;
            } else if (900 <= year && year < 1000) {
                year_valu = 4;
                remnant = year - 900;
            } else if (1600 <= year && year < 1700) {
                year_valu = 4;
                remnant = year - 1600;
            } else if (2200 <= year && year < 2300) {
                year_valu = 4;
                remnant = year - 2200;
            } else if (2900 <= year && year < 3000) {
                year_valu = 4;
                remnant = year - 2900;
            } else if (3600 <= year && year < 3700) {
                year_valu = 4;
                remnant = year - 3600;
            } else if (4300 <= year && year < 4400) {
                year_valu = 4;
                remnant = year - 4300;
            } else if (year == 5000) {
                year_valu = 4;
                remnant = year - 5000;
            }
        } else if ((300 <= year && year < 400) || (1000 <= year && year < 1100) || (1700 <= year && year < 1800) || (2300 <= year && year < 2400) || (3000 <= year && year < 3100) || (3700 <= year && year < 3800) || (4400 <= year && year < 4500)) {
            if (300 <= year && year < 400) {
                year_valu = 3;
                remnant = year - 300;
            } else if (1000 <= year && year < 1100) {
                year_valu = 3;
                remnant = year - 1000;
            } else if (1700 <= year && year < 1800) {
                year_valu = 3;
                remnant = year - 1700;
            } else if (2300 <= year && year < 2400) {
                year_valu = 3;
                remnant = year - 2300;
            } else if (3000 <= year && year < 3100) {
                year_valu = 3;
                remnant = year - 3000;
            } else if (3700 <= year && year < 3800) {
                year_valu = 3;
                remnant = year - 3700;
            } else if (4400 <= year && year < 4500) {
                year_valu = 3;
                remnant = year - 4400;
            }
        } else if ((400 <= year && year < 500) || (1100 <= year && year < 1200) || (1800 <= year && year < 1900) || (2400 <= year && year < 2500) || (3100 <= year && year < 3200) || (3800 <= year && year < 3900) || (4500 <= year && year < 4600)) {
            if (400 <= year && year < 500) {
                year_valu = 2;
                remnant = year - 400;
            } else if (1100 <= year && year < 1200) {
                year_valu = 2;
                remnant = year - 1100;
            } else if (1800 <= year && year < 1900) {
                year_valu = 2;
                remnant = year - 1800;
            } else if (2400 <= year && year < 2500) {
                year_valu = 2;
                remnant = year - 2400;
            } else if (3100 <= year && year < 3200) {
                year_valu = 2;
                remnant = year - 3100;
            } else if (3800 <= year && year < 3900) {
                year_valu = 2;
                remnant = year - 3800;
            } else if (4500 <= year && year < 4600) {
                year_valu = 2;
                remnant = year - 4500;
            }
        } else if ((500 <= year && year < 600) || (1200 <= year && year < 1300) || (2500 <= year && year < 2600) || (3200 <= year && year < 3300) || (3900 <= year && year < 4000) || (4600 <= year && year < 4700)) {
            if (500 <= year && year < 600) {
                year_valu = 1;
                remnant = year - 500;
            } else if (1200 <= year && year < 1300) {
                year_valu = 1;
                remnant = year - 1200;
            } else if (2500 <= year && year < 2600) {
                year_valu = 1;
                remnant = year - 2500;
            } else if (3200 <= year && year < 3300) {
                year_valu = 1;
                remnant = year - 3200;
            } else if (3900 <= year && year < 4000) {
                year_valu = 1;
                remnant = year - 3900;
            } else if (4600 <= year && year < 4700) {
                year_valu = 1;
                remnant = year - 4600;
            }
        } else if ((600 <= year && year < 700) || (1300 <= year && year < 1400) || (1900 <= year && year < 2000) || (2600 <= year && year < 2700) || (3300 <= year && year < 3400) || (4000 <= year && year < 4100) || (4700 <= year && year < 4800)) {
            if (600 <= year && year < 700) {
                year_valu = 0;
                remnant = year - 600;
            } else if (1300 <= year && year < 1400) {
                year_valu = 0;
                remnant = year - 1300;
            } else if (1900 <= year && year < 2000) {
                year_valu = 0;
                remnant = year - 1900;
            } else if (2600 <= year && year < 2700) {
                year_valu = 0;
                remnant = year - 2600;
            } else if (3300 <= year && year < 3400) {
                year_valu = 0;
                remnant = year - 3300;
            } else if (4000 <= year && year < 4100) {
                year_valu = 0;
                remnant = year - 4000;
            } else if (4700 <= year && year < 4800) {
                year_valu = 0;
                remnant = year - 4700;
            }
        } else if ((700 <= year && year < 800) || (1400 <= year && year < 1500) || (2000 <= year && year < 2100) || (2700 <= year && year < 2800) || (3400 <= year && year < 3500) || (4100 <= year && year < 4200) || (4800 <= year && year < 4900)) {
            if (700 <= year && year < 800) {
                year_valu = 6;
                remnant = year - 700;
            } else if (1400 <= year && year < 1500) {
                year_valu = 6;
                remnant = year - 1400;
            } else if (2000 <= year && year < 2100) {
                year_valu = 6;
                remnant = year - 2000;
            } else if (2700 <= year && year < 2800) {
                year_valu = 6;
                remnant = year - 2700;
            } else if (3400 <= year && year < 3500) {
                year_valu = 6;
                remnant = year - 3400;
            } else if (4100 <= year && year < 4200) {
                year_valu = 6;
                remnant = year - 4100;
            } else if (4800 <= year && year < 4900) {
                year_valu = 6;
                remnant = year - 4800;
            }
        }

        if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)) {
            if (month == 1) {
                month_valu = 0;
            } else if (month == 2) {
                month_valu = 3;
            }
        } else {
            if (month == 1) {
                month_valu = 1;
            } else if (month == 2) {
                month_valu = 4;
            }
        }
        if ((month == 3) || (month == 11)) {
            month_valu = 4;
        } else if ((month == 4) || (month == 7)) {
            month_valu = 0;
        } else if (month == 5) {
            month_valu = 2;
        } else if (month == 6) {
            month_valu = 5;
        } else if (month == 8) {
            month_valu = 3;
        } else if ((month == 9) || (month == 12)) {
            month_valu = 6;
        } else if (month == 10) {
            month_valu = 1;
        }

        div = remnant / 4;

        all_sum = year_valu + remnant + div + month_valu + date;

        day = all_sum % 7;

        if (day == 0) {
            dateday = "Saturday";
        } else if (day == 1) {
            dateday = "Sunday";
        } else if (day == 2) {
            dateday = "Monday";
        } else if (day == 3) {
            dateday = "Tuesday";
        } else if (day == 4) {
            dateday = "Wednesday";
        } else if (day == 5) {
            dateday = "Thursday";
        } else if (day == 6) {
            dateday = "Friday";
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AddEvent f = new AddEvent();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBackButton;
    private javax.swing.JButton AddClearButton;
    private javax.swing.JButton AddEnterButton;
    private javax.swing.JButton AddEventClear2;
    private javax.swing.JTextField AddEventFieldEventName;
    private javax.swing.JLabel AddEventLavel;
    private javax.swing.JTable AddEventTabel;
    private javax.swing.JLabel AddInformationLabel;
    private javax.swing.JTextArea AddTextArea;
    private javax.swing.JButton AllDataTextButton;
    private javax.swing.JTextField AllDateText;
    private javax.swing.JButton ChooseEventEnterButton;
    private javax.swing.JTextField ChooseEventFieldDate;
    private javax.swing.JTextField ChooseEventFieldname;
    private javax.swing.JLabel ChooseEventLabel;
    private javax.swing.JButton ChooseExit;
    private javax.swing.JLabel DataEntryDMY;
    private javax.swing.JSpinner DateScroll;
    private javax.swing.JTextField DateText;
    private javax.swing.JLabel DayLabel;
    private javax.swing.JLabel INFOLavel;
    private javax.swing.JLabel ManthLabel;
    private javax.swing.JSpinner MonthScroll;
    private javax.swing.JTextField MonthText;
    private javax.swing.JButton OKDataButton;
    private javax.swing.JButton OkMonthBUtton;
    private javax.swing.JButton OkYearButton;
    private javax.swing.JLabel YearLabel;
    private javax.swing.JSpinner YearScroll;
    private javax.swing.JTextField YearText;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator4;
    // End of variables declaration//GEN-END:variables
}
